// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//A tool that allows you to interact with a database 
//using code instead of SQL

/**
 * whats prisma?
 * Prisma is an ORM (Object-Relational Mapper) that makes it easier
 * to work with databases in JavaScript and TypeScript. Instead of
 * writing raw SQL, you use Prisma Client, which generates SQL for you.
 */

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String
  followers    Int      @default(0)
  isActive     Boolean  @default(true)
  registeredAt DateTime @default(now())
}

model Product {
  id    Int    @id @default(autoincrement())
  name  String
  price Float
}

model Order {
  id         Int      @id @default(autoincrement())
  userId     Int
  productId  Int
  quantity   Int
  totalPrice Float
  orderDate  DateTime @default(now())
}

model Review {
  id        Int      @id @default(autoincrement())
  productId Int
  userId    Int
  rating    Int
  comment   String
  createdAt DateTime @default(now())
}

model Category {
  id          Int    @id @default(autoincrement())
  name        String
  description String
}

model Comment {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  content   String
  createdAt DateTime @default(now())
}

model Post {
  id        Int      @id @default(autoincrement())
  userId    Int
  title     String
  content   String
  createdAt DateTime @default(now())
}

model Profile {
  id        Int      @id @default(autoincrement())
  userId    Int
  bio       String
  avatarUrl String
  createdAt DateTime @default(now())
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
}

model Address {
  id        Int      @id @default(autoincrement())
  userId    Int
  street    String
  city      String
  state     String
  zipCode   String
  createdAt DateTime @default(now())
}
